@using Edu.Tools

<link href="~/Tookit/jQuery-emoji/lib/css/jquery.mCustomScrollbar.min.css" rel="stylesheet" />
<link href="~/Tookit/jQuery-emoji/css/jquery.emoji.css" rel="stylesheet" />
<link href="~/Content/Web/css/chat.css?v=2.0" rel="stylesheet" />
<link href="~/Tookit/layer/skin/layer.css" rel="stylesheet" />
<script src="~/Tookit/jQuery-emoji/lib/script/jquery.mousewheel-3.0.6.min.js"></script>
<script src="~/Tookit/jQuery-emoji/js/jquery.emoji.min.js"></script>
<script src="~/Tookit/jQuery-emoji/lib/script/jquery.mCustomScrollbar.min.js"></script>
<script src="~/Scripts/jquery.form.js"></script>
<script src="~/Scripts/data.js"></script>
<script src="~/Scripts/emoji.js"></script>
<script src="~/Scripts/pasteimg.js"></script>
<script src="~/Tookit/layer/layer.js"></script>
<script src="~/Tookit/layui2.1.5/layui.js"></script>
<link href="~/Tookit/layui2.1.5/css/layui.css" rel="stylesheet" />
<script src="~/Content/Web/fonts/iconfont.js"></script>

<script src="~/Content/RtcMultiConnection/RTCMultiConnection.min.js"></script>
<script src="~/Content/RtcMultiConnection/socket.io.js"></script>
<script src="~/Content/RtcMultiConnection/adapter.js"></script>
<script src="~/Content/RtcMultiConnection/getHTMLMediaElement.js"></script>
<div id="app" class="chat-panel" v-loading="loading" element-loading-text="拼命加载中" v-cloak>
    <!-- 聊天窗口 -->
    <div class="chat-panel-body clearfix" id="div0">
        <span class="cphead-name" style="display: none">@ViewBag.tousername</span>
        <div class="div-subject" v-if="subjectList.length > 0">
            <span class="span-subject hover">所有主题</span>
            <span v-for="(item, index) in subjectList" class="span-subject" v-bind:data-id="item.id" v-cloak>{{item.name}}</span>
        </div>
        <!-- 中间聊天内容 -->
        <div class="col-12 float-l tab-content">
            <div class="tab-con-top">
                <el-scrollbar class="chat-div" ref="chatPanel">
                    <infinite-loading direction="top" @@infinite="infiniteHandler" spinner="spiral">
                        <div slot="no-more"></div>
                        <div slot="no-results"></div>
                    </infinite-loading>
                    <ul class="chatlp-top" id="ulChat">
                        <li v-for="(item, index) in chatListAll" v-bind:id="item.id1" v-bind:data-msgid="item.id0">
                            <div class="chat-time">
                                <span v-cloak>{{item.msgtime}}</span>
                            </div>
                            <div v-bind:class="{ 'out': item.fromuid==uid,'in': item.fromuid!=uid }">
                                <div class="media clearfix">
                                    <div class="inline-block">
                                        <img class="head-ssimg" v-bind:src="getHeadPhoto(item.fromuid)" />
                                    </div>
                                    <div class="media-body">
                                        <p class="color-9" v-bind:title="item.fromrealname" v-cloak>{{item.fromrealname}}</p>
                                        <!--文本类消息-->
                                        <p v-if="item.msgtype == 0" class="mb-txt" v-html="item.msg"></p>
                                        <!--图片类消息-->
                                        <p v-if="item.msgtype == 1" class="mb-txt mb-filetxt">
                                            <img class="imgA" v-bind:src="item.msg" v-on:click="ShowImage(item.msg)">
                                        </p>
                                        <!--文件类消息-->
                                        <p v-if="item.msgtype == 2" class="mb-txt mb-filetxt">
                                            <a class="layui-layim-file" v-bind:href="item.msg" target="_blank" v-bind:title="item.filename">
                                                <i class="layui-icon"></i>
                                                <cite v-cloak>{{item.filename}}</cite>
                                            </a>
                                        </p>
                                        <!--图文混合类消息-->
                                        <p v-if="item.msgtype == 3" class="mb-txt">
                                            <span>{{item.msg | imageAndTextMessage}}</span>
                                            <img v-for="(image, indexImage) in item.imglist" class="imgA" v-bind:src="image" v-on:click="ShowImage(image)"/>
                                        </p>
                                        <!--语音类消息-->
                                        <div v-if="item.msgtype == 4" v-bind:id="id0" class="yuyin fl" v-bind:style="getAudioLength(item.duration)" v-bind:audioSize="item.duration">
                                            <span v-bind:class="{ 'yuyin_txt yy_txt_r': item.fromuid==uid,'yuyin_txt yy_txt_l': item.fromuid!=uid }" v-cloak>{{getAudioLength(item.duration)}}''</span>
                                            <audio class="myaudio" preload="auto" hidden="true">
                                                <source v-bind:src="item.msg" type="audio/mpeg">
                                            </audio>
                                            <span v-bind:class="{ 'yuyin_img yuyin_img_r': item.fromuid==uid,'yuyin_img yuyin_img_l': item.fromuid!=uid }"></span>
                                        </div>
                                        <!--地图类消息-->
                                        <div v-if="item.msgtype == 5" class="map-item">
                                            <div class="mapi-top" v-bind:map-data="item.filename" v-bind:id="'map'+item.id0">
                                            </div>
                                            <p class="mapi-mid">位置</p>
                                            <p class="mapi-bot" v-bint:title="item.msg" v-cloak>{{item.msg}}</p>
                                        </div>
                                        <!--xxx加入群组视频聊天 通知类消息-->
                                        <p v-if="item.msgtype == 6" class="mb-txt" v-html="item.msg"></p>
                                        <!--移动端小视频类消息-->
                                        <p v-if="item.msgtype == 7" class="mb-txt">
                                            <video controls='controls' style='width:100%;' v-bind:src='item.msg'></video>
                                        </p>
                                        <!--移动端需要确认的回执类消息-->
                                        <p v-if="item.msgtype == 8" class="mb-txt" v-html="item.msg"></p>
                                    </div>
                                    <i class="iconfont icon-collection user-fav" title="收藏" v-on:click="AddUserFavorites(item.id0)"></i>
                                </div>
                            </div>
                        </li>
                    </ul>
                </el-scrollbar>
                <div class="conference-notify hide">
                    <p class="conference-notify-p">当前群组正在进行视频会议</p>
                </div>
            </div>
            <div class="chatlp-bot" id="div2">
                <div class="chat-disconnect"><p>当前连接已断开，正在重连...</p></div>
                <div class="clearfix mt10">
                    <p class="chatlpb-btn float-l">
                        <i class="iconfont icon-chatsmile" id="emojiBtn" title="选择表情"></i>
                        <i class="iconfont icon-chatimg" id="imgBtn" title="选择图片"></i>
                        <i class="iconfont icon-chatfile" id="fileBtn" title="传送文件"></i>
                        <i class="iconfont icon-chatvideo" id="videoBtn" title="视频电话" v-on:click="VideoChat()"></i>
                        <i v-if="isAdmin" class="iconfont icon-Newtheme" id="subjectBtn" title="新建主题" v-on:click="OpenCreateSubjectPrompt"></i>
                    </p>
                    <div style="height:0px !important;">
                        <el-upload class="upload-demo" style="display: none;" ref="upload"
                                   action="/imwebapi/Home/Upload"
                                   :auto-upload="false"
                                   :multiple="false"
                                   :on-success="uploadSuccess"
                                   :on-progress="uploadProgress"
                                   :on-change="handleChange"
                                   :on-error="uploadError" accept="doc,docx,ppt,pptx,pdf,caj,txt,xls,xlsx,wps,rar,zip,bmp,jpg,pic,png,tif,gif,jpeg,wav,mp3,wma,aac,flac,avi,mov,swf,flv,mp4,mpg,mpeg,rm,rmvb">
                            <el-button size="small" type="primary" id="vueuploadBtn">点击上传</el-button>
                        </el-upload>

                        <div id="chatcontent" style="display: none;">
                            <div v-for="(item, index) in chatList">
                                <h3>{{item.fromrealname}}  <span class="h3-time">{{item.msgtime}}</span></h3>
                                <!--0 纯文本消息(包含了表情，用文字替代)-->
                                <p v-if="item.msgtype==0" class="p-msg">{{item.msg}}</p>
                                <!--1 图片消息-->
                                <img v-if="item.msgtype==1" class="p-msg-img" v-bind:src="item.msg" />
                                <!--2 文件消息-->
                                <p v-if="item.msgtype==2" class="p-msg">{{'[文件]'+item.filename}}</p>
                                <!--3 图文混合消息-->
                                <!--4 存放语音消息的url-->
                                <!--5 存放地图签到消息-->
                                <!--6 存放xxx加入视频聊天-->
                                <!--7 视频播放地址的url-->
                                <!--8 存放 文本消息内容(需要回执类消息)-->
                                <p v-if="item.msgtype==8" class="chat-msg-word">{{item.msg}}</p>
                            </div>
                        </div>

                    </div>
                    <p class="float-r color-6">
                        <i class="iconfont icon-historyTime cp link" id="historyBtn" title="消息记录"></i>
                    </p>
                    <p class="float-r color-6">
                        <span class="msg-font-style hover">小</span>
                        <span class="msg-font-style">中</span>
                        <span class="msg-font-style">大</span>
                    </p>
                    <form id="imgForm">
                        <input id="uploadimgname" type="file" name="uploadimgname" style="display: none;" accept="image/jpg, image/png, image/jpeg, image/gif, image/bmp, image/tif" />
                    </form>
                </div>
                <div id="msgTextarea" contenteditable="true" v-on:keyup="SendMessageKeyUp($event)"></div>
                <p class="btn-group text-right">
                    <a v-on:click="SendMessage()">发送</a>
                </p>
            </div>
        </div>
        <!-- 右侧视频聊天 -->
        <div class="col-2 float-l video-content" id="videoChatDiv">

        </div>
        <!-- 右侧聊天记录 -->


        <div class="col-2 float-l chatlist-content posr" id="historychatDiv">
            <p class="vc-top color-9">
                <span>消息记录</span>
                <span class="chat-export">导出</span>
            </p>
            <!-- 顶部聊天切换 -->
            <p class="chatlist-tab">
                <a href="javascript:void(0);" class="cur" onclick="SearchHistoryChatByType(this, 0)">全部</a>
                <a href="javascript:void(0);" onclick="SearchHistoryChatByType(this, 1)">图片</a>
                <a href="javascript:void(0);" onclick="SearchHistoryChatByType(this, 2)">文件</a>
            </p>
            <!-- 中间聊天记录内容全部 -->
            <div class="chatlist-panel" id="historychatPanel">

            </div>
            <!-- 中间聊天记录内容图片 -->
            <div class="chatlist-panel hide chatlist-img" id="historychatPanelPic">

            </div>
            <!-- 中间聊天记录内容文件 -->
            <div class="chatlist-panel chatlist-file hide" id="historychatPanelFile">
                <ul class="mt10"></ul>
            </div>
            <!-- 底部搜索 -->
            <div class="chatlist-bot clearfix posr" id="divbt">
                <i class="iconfont icon-searchBtn float-l cp" id="searchI"></i>
                <div class="search-div ihide" id="searchDiv">
                    内容：<input type="text" id="searchInput" />
                    <i class="iconfont icon-delte" id="clearBtn"></i>
                    <a href="javascript:SearchHistoryChat();">确定</a>
                </div>
                <div class="float-r">
                    <i class="iconfont icon-date cp"></i>
                    <input type="text" class="layui-input" id="searchDatetime">
                    <span class="arrow-group">
                        <i class="iconfont icon-last" title="前一天" id="pageFirst"></i>
                        <i class="iconfont icon-rightJian" title="上一页" id="pageBefore"></i>
                        <i class="iconfont icon-rightJ" title="下一页" id="pageNext"></i>
                        <i class="iconfont icon-first" title="后一天" id="pageLast"></i>
                    </span>
                </div>
            </div>
        </div>
    </div>
</div>
@*聊天表情加载*@
<script src="~/Scripts/chatindex.js"></script>
<script src="~/Scripts/jquery.cookie.js"></script>
@*引用vue*@
<script src="~/Content/Web/js/vue.js"></script>
<script src="~/Content/Web/js/index.js"></script>
@*获取文件md5*@
<script src="~/Scripts/bmfmd5.js"></script>
@*高德地图jsapi*@
<script src="https://webapi.amap.com/maps?v=1.4.14&key=114c060f18052ae4003d4a003e62a4b9"></script>
<script src="~/Content/Jquery2Doc/js/FileSaver.js"></script>
<script src="~/Content/Jquery2Doc/js/jquery.wordexport.js"></script>
<!-- 引入vue-infinite-loading组件库 (向上滚动加载) -->
<script src="~/Content/VideoConfenence/js/vue-infinite-loading.js"></script>
<!-- 引入 Vue API接口请求 -->
<script src="~/Content/VideoConfenence/js/vue-resource.js"></script>
<script>
    /*判断是否有群组视频会议房间*/
    @*if ("@ViewBag.isGroup" === "1"){
        var newsocket = io('https://rtc.cnki.net/');
        newsocket.emit('check-presence', '@ViewBag.touid', function(isRoomExist, _roomid, extra) {
            if(isRoomExist){
                $(".conference-notify").removeClass('hide');
            }
        });
    }*@
    //var maps = $(".mapi-top");
    //$.each(maps, function (n, item) {
    //    var itemid = $(item).attr('id');
    //    var latitude = $(item).attr('map-data').split(',');
    //    GaoDeMap(itemid,latitude);
    //});


    layui.use('laydate', function () {
        var laydate = layui.laydate;

        //执行一个laydate实例
        laydate.render({
            elem: '#searchDatetime'
            , value: (new Date()).format('yyyy-MM-dd ')
            , done: function (value, date, endDate) {
                dateTime = value;
                GetHistoryChat(value, 1);
            }
        });
        window.setData = function (dt) {
            laydate.render({ elem: '#searchDatetime', value: dt });
        }
    });

    //定义一个全局过滤器  [$PICTURE$] 是需要被替换的内容
    Vue.filter('imageAndTextMessage', function (msg) {
        return msg.replace(/\[.*\]/g, '');//去掉[ ]及内容
    });


    var vm = new Vue({
        el: '#app',
        data: function () {
            return {
                loading: true,
                isgroup:@ViewBag.isgroup,//是否是群组，1表示是，0表示否
                uid: '@LoginUserService.ssoUserID',
                touid: '@ViewBag.touid',
                fromusername:'@ViewBag.fromusername',
                tousername: '@ViewBag.tousername',
                isAdmin:false,//如果是群组，该字段表示是否是 管理员，管理员拥有创建主题的权限
                chatListAll: [],//当前页面上的聊天记录
                subjectList: [],//如果是群组界面，主题
                subjectPageSize: 5,//主题列表，每页大小
                subjectPageNo:1,//主题列表，页码
                chatList: [],//聊天历史记录,导出聊天历史记录的时候使用

                };
        },

        watch: {
            //渲染完查询的聊天记录后，再去执行下载
            chatList: function() {
                this.$nextTick(() => {
                    if(this.chatList.length>0){
                        var docName="聊天记录";
                        if("@ViewBag.isGroup"==="1"){
                            docName="@ViewBag.tousername"+"群组的聊天记录("+(new Date(this.chatList[0].msgtime)).format('yyyy年MM月dd日')+")";
                        }else{
                            docName="我与"+"@ViewBag.tousername"+"的聊天记录("+(new Date(this.chatList[0].msgtime)).format('yyyy年MM月dd日')+")";
                        }
                        this.$message({
                            showClose: true,
                            message: '开始下载'+docName+".doc",
                            type: 'success'
                        });
                        $("#chatcontent").wordExport(docName);
                    }
                });
            },
            //渲染完查询的聊天后，再去格式化表情、高德地图
            chatListAll: function () {
                console.log("chatListAll--changed");
                this.$nextTick(() => {
                    var maps = $(".mapi-top");
                    $.each(maps, function (n, item) {
                        var itemid = $(item).attr('id');
                        var latitude = $(item).attr('map-data').split(',');
                        GaoDeMap(itemid,latitude);
                    });
                    var emojies = $(".mb-txt");
                    $.each(emojies, function (n, item) {
                        EmojiParse($(item));
                    });                    
                });
            }, 
        },
        mounted: function () {
            //渲染完html后  添加emoji初始化            
            $("#emojiBtn").click(function () {
                $("#emojiBtn").unbind();
                $("#msgTextarea").emoji({
                    button: "#emojiBtn",
                    showTab: false,
                    animation: 'slide',
                    icons: [
                        {
                            name: "表情",
                            path: "http://" + window.location.host + "/im/Tookit/jQuery-emoji/img/emoji/",
                            maxNum: 84,
                            file: ".png",
                            placeholder: "#{alias}#",
                            alias: {
                                1: "呵呵",
                                2: "色",
                                3: "失望",
                                4: "惊讶",
                                5: "嘻嘻",
                                6: "亲亲",
                                7: "调皮",
                                8: "皱眉",
                                9: "失望",
                                10: "尴尬",
                                11: "大哭",
                                12: "吐舌",
                                13: "恼火",
                                14: "不开心",
                                15: "轻蔑",
                                16: "哈哈",
                                17: "生病",
                                18: "脸红",
                                19: "流汗",
                                20: "笑哭",
                                21: "微笑",
                                22: "鼻涕",
                                23: "鬼脸",
                                24: "惊恐",
                                25: "抱歉",
                                26: "眩晕",
                                27: "自信笑",
                                28: "惊吓",
                                29: "叹气",
                                30: "委屈",
                                31: "可以",
                                32: "小鬼",
                                33: "妖怪",
                                34: "圣诞",
                                35: "小狗",
                                36: "小猪",
                                37: "小猫",
                                38: "大拇指",
                                39: "大拇指下",
                                40: "拳头",
                                41: "拳头上",
                                42: "耶",
                                43: "肌肉",
                                44: "鼓掌",
                                45: "向左",
                                46: "向上",
                                47: "向右",
                                48: "向下",
                                49: "OK",
                                50: "爱心",
                                51: "心碎",
                                52: "太阳",
                                53: "月亮",
                                54: "醒醒",
                                55: "雷电",
                                56: "乌云",
                                57: "红唇",
                                58: "玫瑰",
                                59: "咖啡",
                                60: "蛋糕",
                                61: "闹钟",
                                62: "啤酒",
                                63: "查询",
                                64: "手机",
                                65: "房屋",
                                66: "汽车",
                                67: "礼物",
                                68: "足球",
                                69: "炸弹",
                                70: "钻石",
                                71: "外星人",
                                72: "满分",
                                73: "现金",
                                74: "游戏",
                                75: "大便",
                                76: "SOS",
                                77: "睡觉",
                                78: "唱歌",
                                79: "雨伞",
                                80: "书本",
                                81: "祈祷",
                                82: "火箭",
                                83: "粥",
                                84: "西瓜"
                            }
                        }
                    ]
                });
            });


        },
        created : function() {
            var self = this;

            /*构造地图，构造聊页面中聊天记录中的地图*/
            window.GaoDeMap = function (itemid, latitude) {
                new AMap.Map(itemid, {
                    resizeEnable: true,
                    zoom: 11,
                    center: [latitude[1], latitude[0]],
                });
            };

            window.GetChatHistory = function (dt0,dt1){
                $.ajax({
                    type: "Get",
                    headers: {
                        'ignore-identity': true
                    },
                    url: "/imwebapi/api/MainApi/GetChatHistory",
                    data: {uid:self.uid,touid:self.touid,dt0:dt0,dt1:dt1},
                    dataType: "json",
                    success:  function(data) {
                        if (data.Success) {
                            self.chatList=data.Content;
                        } else{
                            self.chatList=[];
                        }
                    }
                });
            };

            /*
                发送消息后 将消息内容更新到聊天面板中 在自己的页面添加一条图片消息 这里添加的是文件消息
            */
            window.AppendSelfFileMsgNew = function(filename, fileid,fileurl,id) {
                var ntime = (new Date()).format('yyyy/MM/dd hh:mm:ss');
                var chatClass = "chat-time";
                var lastLi = $("#ulChat li:last-child");
                if (lastLi) {
                    var lastChatLi = $(lastLi).prev();
                    if (lastChatLi) {
                        var timeSpan = $(lastChatLi).children("span").eq(0);
                        if (timeSpan) {
                            var kTime = $(timeSpan).html();
                            var minusTime=Math.floor(((new Date(ntime)).getTime()-(new Date(kTime)).getTime())/
                            1000);
                            if (minusTime < 120) {
                                chatClass = "chat-time nodisplay";
                            }
                        }
                    }
                }
                var eleChat = $("#ulChat");
                var elestr = "<li id='"+id+"' data-msgid=''><div class=\""+chatClass+"\"><span>" + ntime + "</span></div><div class=\"out\"><div class=\"media clearfix\"><div class=\"inline-block\"><img class=\"head-ssimg\" src=\"" + "@ViewBag.photo" + "\"></div><div class=\"media-body\"><p class=\"color-9\">" + "@ViewBag.fromusername" + "</p><p class=\"mb-txt mb-filetxt\"><a id=\"fileurl" + fileid + "\" class=\"layui-layim-file\"><i class=\"layui-icon\"></i><cite>" + filename + "</cite></a><p id=\"pb-b" + fileid + "\" class=\"pb-b\"></p><p id=\"pb-t" + fileid + "\" class=\"pb-t\"></p></p></div><i class=\"iconfont icon-collection user-fav\" title=\"收藏\"></i></div></div></li>";
                eleChat.append(elestr);
                var elecount = eleChat.children().length;
                eleChat.animate({ scrollTop: elecount * 200 }, 500);
                if (fileurl!=="") {
                    $("#fileurl" + fileid).attr("href", fileurl);
                    $("#pb-b" + fileid).remove();
                    $("#pb-t" + fileid).remove();
                }
            };
            /*发送消息*/
            window.sendMessage = function(obj) {
                var ele = window.parent.parent.document.getElementById("okcsim");
                if (ele != null) {
                    var iframeele = ele.children[0];
                    iframeele.contentWindow.sendMessageNew(obj, SendMessageSuccess, SendMessageFail);
                }
            };

            //消息发送失败的回调
            window.SendMessageFail = function (id) {
                self.chatListAll = self.chatListAll.filter(item => {
                    if (id !== item.id1) {
                        return true;
                    }
                });
            }

            //发送成功的回调函数  设置id，id0为数据库中的id, id1为客户端发送时的id
            window.SendMessageSuccess=function(id0, id1) {
                var msg =self.chatListAll.filter(function (n) {
                    return n.id1 == id1;
                });
                msg.id0 = id0;
            }

            //生成随机字符串
            window._getRandomString = function (len) {
                len = len || 32;
                var $chars = 'ABCDEFGHJKMNPQRSTWXYZabcdefhijkmnprstwxyz2345678'; // 默认去掉了容易混淆的字符oOLl,9gq,Vv,Uu,I1
                var maxPos = $chars.length;
                var pwd = '';
                for (i = 0; i < len; i++) {
                    pwd += $chars.charAt(Math.floor(Math.random() * maxPos));
                }
                return pwd;
            };
            /*
            发送消息后 将消息内容更新到聊天面板中 在自己的页面添加一条图片消息 这里添加的是文字、表情、图片消息
            添加判断，如果和上一条消息的时间差在120s之内，则隐藏时间显示
            */
            window.AppendSelfMsg = function (msg) {
                self.chatListAll.push(msg);
                if (msg.msgtype == 0 || msg.msgtype == 3) {
                    EmojiParse($("#ulChat li:last-child"));
                }
            
            }

            /*
            添加自己从别人那里收到的聊天消息
            包括从移动端同步过来的自己的消息
            添加判断，如果和上一条消息的时间差在120s之内，则隐藏时间显示
            */
            window.AppendOtherUserMsg = function (msg) {
                if (msg.id0 && $("li[data-msgid='" + msg.id0 + "']").length != 0) { return; }
                self.chatListAll.push(msg);
                //格式化表情
                if (msg.msgtype === 0 || msg.msgtype === 3) {                    
                    EmojiParse($("#ulChat li:last-child"));
                }
                //格式化地图
                else if (msg.msgtype === 5) {
                    //地图消息
                    var mapid="map" + msg.id0;                    
                    //构造地图
                    var latitude = msg.filename.split(',');
                    GaoDeMap(mapid,latitude);
                }
                self.ScrollToBottom();
            }

            /*收到视频聊天请求*/
            window.GetVideoChatRequest = function (rommid) {
                $("#div0").addClass('show-video');
                $("#videoBtn").addClass("cur");
                $("#videoChatDiv").load("@Url.Action("VideoChatWindow", "Chat", new {area = ""})", { roomid: rommid, touid: "@ViewBag.touid" }, function (data) { });
            }
            /*发送的视频邀请被拒绝*/
            window.GetVideoChatRefused = function () {
                parent.layer.msg("对方拒绝了你的视频邀请");
                CloseChatVideo();
            }

            //初始化聊天记录
            //this.InitChatList();
            //如果是群组界面，则还要加载主题聊天
            if(this.isgroup == 1) {
                this.InitSubjectList();
                //判断是否是群组管理员(工作群)
                if (this.touid.length === 36) {
                //获取群组成员(最后一个成员为管理员)
                    $.post("@ConfigHelper.GetConfigString("GetMyGroupMembers")", { groupID: self.touid }, function (data) {
                        if (data.Data && data.Data.length > 0) {
                            if (data.Data[data.Data.length - 1].id == self.uid) {
                                //是管理员
                                self.isAdmin=true;
                            }
                        }
                    });
                }
            }
        },
        methods: {
            //获取音频长度
            getAudioLength: function (width) {
                return {
                        width: width+"px"
                    }
            },
            //点击查看大图
            ShowImage: function (url) {
                var re = new RegExp("&amp;", "g"); //定义正则表达式
                var imgulrResult = url.replace(re, "&");
                var resultJson = { "status": 1, "msg": "", "title": "", "id": 1, "start": 0, "data": [{ "alt": "", "pid": "", "src": imgulrResult, "thumb": "" }] };
                if (parent.parent.ShowPhotos) {
                    parent.parent.ShowPhotos(resultJson);
                } else {
                    parent.parent.layerPhotosNew(resultJson);
                }
            },
            //获取用户头像
            getHeadPhoto: function (uid) {
                return '@ConfigHelper.GetConfigString("sso_host_name")' + "pic/" + uid;
            },
            //获取文件后缀名
            getFileName: function (fullname) {
                var pos = fullname.lastIndexOf('.');
                if (pos < 0) {
                    return fullname;
                }
                else {
                    return fullname.substring(0,pos + 1);
                }
            },
            //打开创建主题提示窗口
            OpenCreateSubjectPrompt: function () {
                var self = this;
                self.$prompt('请输入主题名称', '创建主题', {
                    confirmButtonText: '确定',
                    cancelButtonText: '取消',
                    inputPattern: /^[\s\S]*.*[^\s][\s\S]*$/,
                    inputErrorMessage: '请输入合法的主题名称',
                    callback: function (action, instance) {
                         if(action === 'confirm') {
                             self.AddGroupSubject(instance.inputValue);
                         }else {                            
                         }
                     },
                });
            },

            //添加主题
            AddGroupSubject: function (value) {
                var self = this;
                $.ajax({
                    url:'/imwebapi/api/MainApi/AddGroupSubject',
                    type: 'Post',
                    headers: {
                        'ignore-identity': "true"
                    },
                    data: { userId: self.uid, groupId: self.touid, subjectName: value, },
                    success: function (data) {
                        if (data.Success) {
                            self.$message('创建主题成功');
                        } else {
                            self.$message.error('创建主题出错');
                        }
                    },
                    error: function (err) {
                        self.$message.error('创建主题出错');
                    },
                });
            },

            //第一次初始化聊天数据
            InitChatList: function (cb1,cb2) {
                var self = this;
                $.ajax({
                    url:'/imwebapi/api/MainWebApi/RecentlyChat',
                    type: 'Get',
                    headers: {
                        'ignore-identity': "true"
                    },
                    data: { uid: self.uid, touid: self.touid, isgroup: self.isgroup },
                    success: function (data) {
                        if (data.Success) {
                            self.loading = false;
                            self.chatListAll = data.Content;
                            if (self.chatListAll.length > 0) {
                                cb1();
                                //格式化表情，并滚动到底部
                                self.$nextTick(() => {
                                    
                                    self.ScrollToBottom();
                                });

                            } else {
                                cb2();
                            }

                        } else {
                            self.$message.error('获取聊天数据出错');
                        }
                    },
                    error: function (err) {
                    },
                });
                
                this.$nextTick(() => {     
                    this.ScrollToBottom();
                });
            },
            //第一次初始化群组主题数据,翻页查询也用这个
            InitSubjectList: function () {
                var self = this;
                $.ajax({
                    url:'/imwebapi/api/MainApi/GetGroupSubject',
                    type: 'Get',
                    headers: {
                        'ignore-identity': "true"
                    },
                    data: { goupId: self.touid, pageNo: self.subjectPageNo, pageSize:self.subjectPageSize },
                    success: function (data) {
                        if (data.Success) {
                            //self.loading = false;
                            self.subjectList = data.Content;
                            self.subjectPageNo++;
                        } else {
                            self.$message.error('获取聊天数据出错');
                        }
                    },
                    error: function (err) {
                    },
                });
            },
            //向上滚动，刷新聊天数据
            infiniteHandler($state) {
                var self = this;
                if (self.chatListAll.length <= 0) {
                    self.InitChatList(function () {
                        //有数据的回调
                        $state.loaded();
                    }, function () {
                        //无数据的回调
                        $state.complete();
                    });
                    return;
                }
                var lastMsgId = self.chatListAll[0].id0;
                //var content;
                $.ajax({
                    url:'/imwebapi/api/MainWebApi/GetChatHistory',
                    type: 'Get',
                    headers: {
                        'ignore-identity': "true"
                    },
                    data: { uid: self.uid, touid: self.touid, pageSize: 10, keywords:'', lastid:lastMsgId, },
                    success: function (data) {
                        if (data.Success) {
                            if (data.Content.length > 0) {
                                content = data.Content;
                                data.Content.forEach(function (item) {
                                    self.chatListAll.unshift(item);
                                });
                                $state.loaded();
                                self.$nextTick(() => {
                                    var result = data.Content.filter(item => {
                                        return (item.msgtype == 0 || item.msgtype == 3) ;
                                    });
                                    result.forEach(function (item, index) {
                                        EmojiParse($('#'+item.id1));
                                    });
                                });
                            } else {
                                $state.complete();
                            }
                        } else {self.$message.error('获取聊天数据出错');}
                    },
                    error: function (err) {self.$message.error('获取聊天数据出错');
                    },
                });

                
            },

            //聊天panel滚动到最下方
            ScrollToBottom:function() {
                //------滚动条，滚动到最后------
                var div = this.$refs['chatPanel'].$refs['wrap'];
                this.$nextTick(() => {
                    div.scrollTop = div.scrollHeight;
                });
            },

            //收藏click
            AddUserFavorites: function (id) {
                if (id == '' || id == undefined){ return;}
                var self = this;
                $.ajax({
                    url: '/imwebapi/api/MainApi/AddUserFavorites',
                    type: 'POST',
                    headers: {
                        'ignore-identity': "true"
                    },
                    data: {
                        userId: self.uid,
                        type: 1,
                        content: '',
                        cid: id,
                    },
                    dataType: 'json',
                    success: function (result) {
                        if (result.Success) {
                            layer.msg('收藏成功');
                        } else {
                            layer.msg('收藏失败');
                        }

                    },
                    error: function (xhr, textStatus) {

                    }
                });
            },

            //转换图文消息 已弃用
            ConvertImageText: function (msg) {
                var indexK = 0;
                while (msg.msg.indexOf("[$PICTURE$]") >= 0) {
                    msg.msg = msg.msg.replace("[$PICTURE$]", "<img class=\"imgA\" src=\"" + msg.imglist[indexK] + "\">");
                    indexK++;
                }
                return msg.msg;
            },

            //发送聊天消息
            SendMessage: function () {
                var self = this;
                var sendText = document.getElementById('msgTextarea').innerText;//只能获取出文本内容
                var msg = $.trim($("#msgTextarea").html());
                if (msg === "") {
                    layer.msg("发送内容不能为空");
                    return;
                }
                if ($.trim(sendText).length > 2000) {
                    layer.msg("发送文本长度不得大于2000");
                    console.log("------发送内容长度大于2000------", msg.length);
                    return;
                }
                var msgid1 = (new Date()).valueOf();
                var msgObject = {
                        "fromuid": this.uid,
                        "touid": this.touid,
                        "isgroup": this.isgroup,
                        "fromrealname": this.fromusername,
                        "torealname": this.tousername,               
                        "id0":"",
                        "id1": msgid1,
                        "msgtime":(new Date()).format('yyyy/MM/dd hh:mm:ss'),
                        "msgtype": 0,     
                        "msg": msg,
                        "filename":"",
                        "duration": 0,
                        "imglist":[],
                        "terminal": "@ConfigHelper.GetConfigString("ImTerminal")",
                        "subjectId":"",
                        "subjectTitle":"",
                    };
                self.chatListAll.push(msgObject);
                /*清空当前对话框 并显示到聊天面板中*/
                $("#msgTextarea").html("").focus();
                var ele = window.parent.parent.document.getElementById("okcsim");
                if (ele != null) {
                    var iframeele = ele.children[0];
                    //这里有发送文本，发送图片，发送图文混排三种情况，需要从后台判断  返回的type分别是 0 1 3
                    msg = msg.replace(/&nbsp;/g, " ");

                    $.ajax({
                        url: '/imwebapi/api/MainWebApi/GetMessageType',
                        type: 'Get',
                        headers: {
                            'ignore-identity': "true"
                        },
                        data: {
                            message: msg
                        },
                        dataType: 'json',
                        success: function (result) {
                            if (result.Success) {
                                msgObject.msgtype = result.Content.type;
                                msgObject.msg = result.Content.msg;
                                msgObject.imglist = result.Content.imgList;
                                

                                iframeele.contentWindow.sendMessageNew(msgObject, SendMessageSuccess, SendMessageFail);
                            } else {
                                self.$message.error('消息类型转换失败');
                                layer.msg("消息发送失败（错误代码01）");
                                setTimeout(function () {
                                    SendMessageFail(msgid1);
                                }, 1200);
                                console.log("GetMessageType访问失败...");
                            }
                        },
                        error: function (xhr, textStatus) {
                            self.$message.error('API调用失败');
                            setTimeout(function () {
                                SendMessageFail(msgid1);
                            }, 1200);
                            console.log("GetMessageType访问失败...");
                        }
                    })
                };
                this.$nextTick(() => {
                    if (msgObject.msgtype == 0 || msgObject.msgtype == 3) {
                        //格式化表情
                        EmojiParse( $("#"+msgObject.id1));
                    }                     
                    self.ScrollToBottom();
                });
            },

            //聊天输入框的keyup事件
            SendMessageKeyUp: function (event) {
                if (event.keyCode === 13 && !(event.ctrlKey)) {

                    $("#msgTextarea").html($("#msgTextarea").html().replace("<div><br></div>", ""));
                    this.SendMessage()
                    event.preventDefault();
                    return false;
                }
                if (event.ctrlKey && event.keyCode === 13) {
                    $("#msgTextarea").html($("#msgTextarea").html() + '<br>');
                    woohecc.placeCaretAtEnd(inputTxt.get(0));
                    return false;
                }
            },

            //视频聊天
            VideoChat: function () {            
                if (this.isgroup === 1) {
                    //新打开一个窗口
                    window.open(encodeURI('https://oaokcs.cnki.net/im/Chat/JanusMeeting?groupid='+'@ViewBag.touid'+'&groupname='+'@ViewBag.tousername'));
                    var msgid1=(new Date()).valueOf();
                    //发送一条消息(type=6的加入群组聊天消息)
                    var msgObject = {
                        "fromuid": this.uid,
                        "touid": this.touid,
                        "isgroup": this.isgroup,
                        "fromrealname": this.fromusername,
                        "torealname": this.tousername,               
                        "id0":"",
                        "id1": msgid1,
                        "msgtime":(new Date()).format('yyyy/MM/dd hh:mm:ss'),
                        "msgtype": 6,     
                        "msg": this.fromusername + "加入了群组视频会议",
                        "filename":"",
                        "duration": 0,
                        "imglist":[],
                        "terminal": "@ConfigHelper.GetConfigString("ImTerminal")",
                        "subjectId":"",
                        "subjectTitle":"",
                    };
                    this.chatListAll.push(msgObject);
                    //调用okcsim中的发送消息方法
                    var iframeele = window.parent.parent.document.getElementById("okcsim").children[0];
                    iframeele.contentWindow.sendMessageNew(msgObject, SendMessageSuccess, SendMessageFail);
                    return;
                }
                try{
                    //如果是一对一视频聊天，需要判断当前是不是https环境、判断是否有摄像头
                    navigator.getUserMedia({
                        video: true,
                        audio: true
                    }, function(stream) {
                        if ($("#historyBtn").hasClass("cur")) { return; }
                        var touid = "@ViewBag.touid";
                        if (!$("#div0").hasClass("show-video")) {
                            $("#div0").addClass('show-video');
                            $("#videoBtn").addClass("cur");
                            var ele = window.parent.parent.document.getElementById("okcsim");
                            var room = _getRandomString(10);
                            if (ele != null) {
                                var iframeele = ele.children[0];
                                iframeele.contentWindow.videoChat("@LoginUserService.ssoUserID", "@ViewBag.fromusername", touid, room);
                            }
                            $("#videoChatDiv").load("@Url.Action("VideoChatWindow", "Chat", new {area = ""})", { roomid: room, touid: touid }, function (data) { });
                        }
                    }, function(error) {
                        layer.msg("没有可用的摄像头，无法发起一对一视频聊天.");
                        return;
                    });
                }catch(error){
                    layer.msg("当前网站不是https环境，无法发起一对一视频聊天.");
                    return;
                }

            },

            handleChange: function (file, fileList) {
                //文件状态改变时的钩子，添加文件、上传成功和上传失败时都会被调用
                //所以通过status来判断
                if (file.status === "ready") {
                    file = file.raw;
                    console.log(file);
                    console.log(fileList);
                    var self = this;
                    if (file.size <= 0) {
                        layer.msg("文件大小为0KB，文件发送失败！");
                        this.fileList = fileList.splice(fileList.length - 1,1);
                        return false;
                    }
                    if (file.size > 500 * 1024 * 1024) {
                        layer.msg("文件大小超过500MB，文件发送失败！");
                        this.fileList = fileList.splice(fileList.length - 1,1);
                        return false;
                    }
                    var formatArr = ['.doc', '.docx', '.ppt', '.pptx', '.pdf', '.caj', '.txt', '.xls', '.xlsx', '.wps', '.rar', '.zip', '.bmp', '.jpg', '.pic', '.png', '.tif', '.jpeg', '.wav', '.mp3', '.wma', '.aac', '.flac', '.avi', '.mov', '.swf', '.flv', '.mp4', '.mpg', '.mpeg', '.rm', '.rmvb'];
                    var pos = file.name.lastIndexOf('.');
                    if (pos < 0) {
                        layer.msg("文件类型错误！暂不支持此文件格式");
                        this.fileList = fileList.splice(fileList.length - 1,1);
                        return false;
                    }
                    else {
                        var formata = file.name.substring(pos).toLowerCase();
                        if (formatArr.indexOf(formata) < 0) {
                            layer.msg("文件类型错误！暂不支持此文件格式");
                            this.fileList = fileList.splice(fileList.length - 1,1);
                            return false;
                        }
                    }

                    //请求接口，根据md5判断文件是否已经存在服务端
                    browserMD5File(file, function (err, md5) {
                        console.log(md5); // 97027eb624f85892c69c4bcec8ab0f11
                        //这个计算md5的方法，需要一段时间，异步执行的，所以需要在else中添加计算失败的执行方法
                        if (md5) {
                            $.get("/imwebapi/api/MainApi/CheckFileExistByMd5", {md5:md5,filename:file.name}, function(data) {
                                if (data.Success) {
                                    var msgid1=(new Date()).valueOf();
                                    //添加上传的div
                                    AppendSelfFileMsgNew(file.name, file.uid, data.Content,msgid1);
                                    //不用上传，直接调用发送消息方法
                                    var msgObject = {
                                        "fromuid": "@LoginUserService.ssoUserID",
                                        "touid": "@ViewBag.touid",
                                        "isgroup": @ViewBag.isGroup,
                                        "fromrealname": "@ViewBag.fromusername",
                                        "torealname": "@ViewBag.tousername",
                                        "msgtype": 2,
                                        "msg": data.Content,
                                        "filename": file.name,
                                        "duration": file.size,
                                        "terminal": "@ConfigHelper.GetConfigString("ImTerminal")",
                                        "id1":msgid1,
                                    };
                                    sendMessage(msgObject);
                                    self.fileList = fileList.splice(fileList.length - 1,1);
                                    return false;
                                } else {
                                    var msgid1=(new Date()).valueOf();
                                    AppendSelfFileMsgNew(file.name, file.uid,"",msgid1);
                                    //然后执行uploadSuccess这个方法
                                    self.$refs.upload.submit();
                                }
                            }).error(function (xhr, status, info) {
                                console.log("上传文件出错...")    　　
                            });
                        } else {
                            var msgid1=(new Date()).valueOf();
                            AppendSelfFileMsgNew(file.name, file.uid,"",msgid1);
                            //然后执行uploadSuccess这个方法
                            self.$refs.upload.submit();
                        }
                    });

                }
            },
            //文件上传成功时的钩子
            uploadSuccess: function (response, file, fileList) {
                var kfilename = this.getFileName(file.name);
                var encodefilename = encodeURIComponent(kfilename);
                var fileurl = "@ConfigHelper.GetConfigString("HfsDownLoadUrl")" + "title=" + encodefilename + "&fileCode=" + response.Content;
                $("#fileurl" + file.uid).attr("href", fileurl);
                $("#pb-b" + file.uid).remove();
                $("#pb-t" + file.uid).remove();
                //发送消息
                var msgid1=(new Date()).valueOf();
                var msgObject = {
                    "fromuid": "@LoginUserService.ssoUserID",
                    "touid": "@ViewBag.touid",
                    "isgroup": @ViewBag.isGroup,
                    "fromrealname": "@ViewBag.fromusername",
                    "torealname": "@ViewBag.tousername",
                    "msgtype": 2,
                    "msg": fileurl,
                    "filename": file.name,
                    "duration": file.size,
                    "terminal":"@ConfigHelper.GetConfigString("ImTerminal")",
                    "id1":msgid1,
                };
                sendMessage(msgObject);
                if (msgObject.isGroup === 1) {
                    //**********发送到工作群中 新需求：文件上传到群组的共享资料中************
                    var fileformat = "." + file.name.replace(/.+\./, "");
                    var formData = new FormData(); //FormData构造器接收的是一个form的DOM对象
                    formData.append('file', file.raw);
                    $.ajax({
                        url: "/PMC/File/Upload",
                        type: "POST",
                        data: formData,
                        async: true,
                        processData: false,
                        contentType: false,
                        error: function (xhr, status, error) {
                            layer.msg("上传文件到共享资料请求出错!");
                            console.log(error);
                        },
                        success: function (uploadresult) {
                            if (uploadresult.Code === 200) {
                                var groupKnoView = {
                                    ConvertTaskId: uploadresult.Data.ConvertTaskId,
                                    FileCode: uploadresult.Data.FileCode,
                                    Creator: "@ViewBag.fromusername",
                                    Format: fileformat,
                                    ResourceID: "@ViewBag.touid",
                                    SourceType: 1,
                                    Title: file.name,
                                    Type: 10,
                                    UnitID: "@ViewBag.unitId",
                                    userId: "@LoginUserService.ssoUserID",
                                    groupId: "@ViewBag.touid",
                                    realName: "@ViewBag.fromusername"
                                }
                                $.ajax({
                                    type: "Post",
                                    headers: {
                                        'accesstoken': $.cookie("@ConfigHelper.GetConfigString("ssoTokenId")")
                                    },
                                    url: "/pmcwebapi/api/GroupKnowledge/Add",
                                    data: groupKnoView,
                                    dataType: "json",
                                    success: function (addresult) {
                                        if (addresult.Success) {
                                            window.parent.parent.updateShareList && window.parent.parent.updateShareList();
                                        }
                                    }
                                });
                            }
                        }
                    });
                }
                //**********发送到工作群中 新需求：文件上传到群组的共享资料中*******end*****

            },
            //文件上传时的钩子
            uploadProgress: function (event, file, fileList) {
                $("#pb-t" + file.uid).width(event.percent + "%");
            },
            //文件上传失败时的钩子
            uploadError: function (err, file, fileList) {
                layer.msg("文件发送失败！"+err);
                console.log("uploadError------");
                console.log(err);
                console.log(file);
            },
        }
    });

    $(function () {

        if ("@ViewBag.roomid" !== "") {
            $("#div0").addClass('show-video');
            $("#videoBtn").addClass("cur");
            $("#videoChatDiv").load("@Url.Action("VideoChatWindow", "Chat", new {area = ""})", { roomid: "@ViewBag.roomid", touid: "@ViewBag.touid" }, function (data) { });
        }

        //监听右键粘贴图片
        document.getElementById("msgTextarea").addEventListener('paste', function (e) {
            listenPasteImage(e, "@ViewBag.touid", function (result) {
                if (result.Content === null) {
                    layer.msg("服务出现异常，图片发送失败！");
                    return;
                }
                var url = "@ConfigHelper.GetConfigString("HfsUrl")" + result;
                CreateImgElement(url);
            });
        });



        /*点击用户 直接进行私聊*/
        $(document).on('click', '#ulChat li.in .head-ssimg', function () {
            var imgurl = $(this).attr("src");
            var uid = imgurl.substring(imgurl.lastIndexOf('/') + 1, imgurl.length + 2);
            var name = $(this).parent().next().children("p:eq(0)").html();
            var ele0 = window.parent.parent.document.getElementById("okcsim");
            var iframeele = ele0.children[0];
            if (iframeele != null) {
                iframeele.contentWindow.OpenPrivateChat && iframeele.contentWindow.OpenPrivateChat(uid, name);
            }
        });
        var curPlayId = null;//当前播放语音标识
        /*播放语音消息*/
        $(document).on('click', '.yuyin', function () {
            var $this = $(this);
            var $audio = $this.children("audio")[0];
            var audioimg = $this.children("span")[1];
            if (curPlayId == null) {
                $audio.currentTime = 0;
                $audio.play();
                //$(audioimg).css('animation-play-state', 'running');
                curPlayId = $this.attr('id');
            } else {
                if ($this.attr('id') === curPlayId) { // 点击当前播放中的语音，暂停播放
                    $audio.pause();
                    //$(audioimg).css('animation-play-state', 'paused');
                    curPlayId = null;
                } else {
                    // 先暂停当前播放语音
                    $('#' + curPlayId).children("audio")[0].pause();
                    var audioimgother = $('#' + curPlayId).children("span")[1];
                    //$(audioimgother).css('animation-play-state', 'paused');
                    // 播放点击语音
                    $audio.currentTime = 0;
                    $audio.play();
                    //$(audioimg).css('animation-play-state', 'running');
                    curPlayId = $this.attr('id');
                }
            }
        });

        //$(document).on('click', '.imgA', function () {
        //    ShowImg($(this));
        //});


        //$('.myaudio').on('play', function () {
        //    $(this).next().css('animation-play-state', 'running');
        //});
        //$('.myaudio').on('ended', function () {
        //    $(this).next().css('animation-play-state', 'paused');
        //});
        //$('.myaudio').on('pause', function () {
        //    $(this).next().css('animation-play-state', 'paused');
        //});


        

        
        /*查看历史聊天记录*/
        $('#historyBtn').click(function () {
            if ($("#videoBtn").hasClass("cur")) { return; }
            if ($('#historyBtn').hasClass("cur")) {
                $('#historyBtn').removeClass("cur");
                $("#div0").removeClass('show-video');
                $("#videoChatDiv").css("display", "block");
                $(".chatlist-tab a").removeClass('cur');
                $(".chatlist-tab a").eq(0).addClass('cur');
                $("#divbt").css('display', 'block');
                $("#historychatPanel").removeClass('hide');
                $("#historychatPanelPic").addClass('hide');
                $("#historychatPanelFile").addClass('hide');
                $("#historychatPanelPic").empty();
                $("#historychatPanelFile ul").empty();
            } else {
                $('#historyBtn').addClass("cur");
                $("#div0").addClass('show-video');
                $("#videoChatDiv").css("display", "none");
                //第一次查询
                //GetHistoryChat(dateTime, 1);
                GetHistorChatLatest();
            }
        });
        $("#clearBtn").click(function () {
            $("#searchInput").val("");
            msgSearch = "";
        });
        $('#searchInput').on({
            keydown: function(e) {
                if (e.keyCode === 13) {
                    SearchHistoryChat();
                }
            }
        });

        $("#pageFirst").click(function () {
            if ($("#pageFirst").hasClass("disabled")) return;
            GetHistoryChat(dateTime, 0);
        });
        $("#pageBefore").click(function () {
            if ($("#pageBefore").hasClass("disabled")) return;
            GetHistoryChat(dateTime, pageNumber - 1);
        });
        $("#pageNext").click(function () {
            if ($("#pageNext").hasClass("disabled")) return;
            GetHistoryChat(dateTime, pageNumber + 1);
        });
        $("#pageLast").click(function () {
            if ($("#pageLast").hasClass("disabled")) return;
            //GetHistoryChat(dateTime, pageCount);
            GetHistoryChat(dateTime, pageCount + 1);
        });

        /*点击搜索按钮 搜索对应的聊天记录*/
        $("#searchI").click(function () {
            $("#searchInput").val("");
            msgSearch = "";
            $("#searchDiv").slideToggle(100);
        });




        
        /*上传图片*/
        $("#imgBtn").click(function () {
            $('#uploadimgname').trigger('click');
        });
        /*上传文件*/
        $("#fileBtn").click(function () {
            $('#vueuploadBtn').trigger('click');
        });
        $('#uploadimgname').on('change', function () {
            var file0 = $("#uploadimgname")[0].files[0];
            if (file0 == null) {
                return;
            }
            if (file0.size <= 0) {
                layer.msg("图片大小为0KB，图片发送失败！");
                return;
            }
            var fileformat = file0.name.replace(/.+\./, "").toLowerCase();
            var formatArr = ['jpg', 'png', 'jpeg', 'gif', 'bmp'];//'tif' 目前tif格式的图片，无法在浏览器中进行预览
            if (formatArr.indexOf(fileformat) < 0) {
                layer.msg("暂不支持此文件格式");
                return;
            }
            if (file0.size > 10 * 1024 * 1024) {
                layer.msg("图片大小超过10MB，图片发送失败！");
                return;
            }
            $("#imgForm").ajaxSubmit({
                type: 'post',
                url: '/imwebapi/Home/Upload',
                success: function (result) {
                    document.getElementById('uploadimgname').value = null;
                    if (result.Content === null) {
                        layer.msg("图片上传失败！");
                        layer.msg(result);
                        return;
                    }
                    var url = "@ConfigHelper.GetConfigString("HfsUrl")" + result.Content;
                    CreateImgElement(url);
                    if ("@ViewBag.isGroup" !== "1") { return; }
                    if ("@ViewBag.touid".length !== 36) { return; }
                    //**********发送到工作群中 新需求：图片上传到群组的共享资料中************
                    var file = file0;
                    var fileformat = "." + file0.name.replace(/.+\./, "").toLowerCase();
                    var formData = new FormData();//FormData构造器接收的是一个form的DOM对象
                    formData.append('file', file0);
                    $.ajax({
                        url: "/PMC/File/Upload",
                        type: "POST",
                        data: formData,
                        async: true,
                        //要想用jquery的ajax来提交FormData数据,
                        //则必须要把这两项设为false
                        processData: false,
                        contentType: false,
                        error: function (xhr, status, error) {
                            layer.msg("请求出错!");
                        },
                        success: function (uploadresult) {
                            if (uploadresult.Code === 200) {
                                var groupKnoView = {
                                    ConvertTaskId: uploadresult.Data.ConvertTaskId,
                                    FileCode: uploadresult.Data.FileCode,
                                    Creator: "@ViewBag.fromusername",
                                    Format: fileformat,
                                    ResourceID: "@ViewBag.touid",
                                    SourceType: 1,
                                    Title: file0.name,
                                    Type: 10,
                                    UnitID: "@ViewBag.unitId",
                                    userId: "@LoginUserService.ssoUserID",
                                    groupId: "@ViewBag.touid",
                                    realName: "@ViewBag.fromusername"
                                }
                                $.ajax({
                                    type: "Post",
                                    headers: {
                                        'accesstoken': $.cookie("@ConfigHelper.GetConfigString("ssoTokenId")")
                                    },
                                    url: "/pmcwebapi/api/GroupKnowledge/Add",
                                    data: groupKnoView,
                                    dataType: "json",
                                    success: function (addresult) {
                                        if (addresult.Success) {
                                            window.parent.parent.updateShareList && window.parent.parent.updateShareList();
                                        }
                                    }
                                });
                            }
                        }
                    });
                }
            });
        });

        var imgPageNo = 1;
        var filePageNo = 1;
        window.SearchHistoryChatByType = function (ele, type) {
            /*
                type=0 全部
                type=1 图片
                type=2 文件
            */
            $(".chatlist-tab a").removeClass('cur');
            $(ele).addClass('cur');
            if (type === 0) {
                $("#divbt").css('display', 'block');
                $("#historychatPanel").removeClass('hide');
                $("#historychatPanelPic").addClass('hide');
                $("#historychatPanelFile").addClass('hide');
                $("#historychatPanelPic").empty();
                $("#historychatPanelFile ul").empty();
            } else if (type === 1) {
                imgPageNo = 1;
                $("#divbt").css('display', 'none');
                $("#historychatPanelPic").removeClass('hide');
                $("#historychatPanel").addClass('hide');
                $("#historychatPanelFile").addClass('hide');
                $("#historychatPanelPic").empty();
                if ("@ViewBag.isGroup" === "1") {
                    GetGroupHistoryChatImg(1);
                } else {
                    GetPersonalHistoryChatImg(1);
                }
            } else if (type === 2) {
                filePageNo = 1;
                $("#divbt").css('display', 'none');
                $("#historychatPanelFile").removeClass('hide');
                $("#historychatPanelPic").addClass('hide');
                $("#historychatPanel").addClass('hide');
                $("#historychatPanelFile ul").empty();
                $(".clickmore").remove();
                if ("@ViewBag.isGroup" === "1") {
                    GetGroupHistoryChatFile(1);
                } else {
                    GetPersonalHistoryChatFile(1);
                }
            }
        }
        
        

        


        


        var pageCount = 0;
        var pageNumber = 0;
        var msgSearch = "";
        var dateTime = (new Date()).toLocaleDateString();
        var hasNextDay = false;
        var hasBeforeDay = false;
        window.GetHistorChatLatest = function () {
            var load = layer.load();
            var strurl = '@Url.Action("GetPersonalChatHistoryLatest", "Main")';
            if ('@ViewBag.isGroup' === '1') {
                strurl = '@Url.Action("GetGroupChatHistoryLatest","Main")';
            }
            $.post(strurl, { fromuid: '@LoginUserService.ssoUserID', touid: "@ViewBag.touid" }, function (result) {
                if (result.status === 0) {
                    DoResult(result);
                } else {
                    layer.msg('查询出错');
                    console.log(result.msg);
                }
                layer.close(load);
            });
        }
        window.GetHistoryChat = function (valtime, pageNo) {
            if (valtime === "") return;
            var load = layer.load();
            var strurl = '@Url.Action("GetPersonalChatHistory", "Main")';
            if ('@ViewBag.isGroup' === '1') {
                strurl = '@Url.Action("GetGroupChatHistory", "Main")';
            }
            if (pageNo !== 1 && pageNo > pageCount) {
                //跳页查询，查询有记录的下一天数据
                GetHistoryChatOverPageLast(valtime);
            } else if (pageNo === 0) {
                //跳页查询 查询有记录的上一天的数据
                GetHistoryChatOverPageBefore(valtime);
            } else {
                $.post(strurl, { fromuid: '@LoginUserService.ssoUserID', touid: "@ViewBag.touid", dt: valtime, pageNo: pageNo, msg: msgSearch }, function (result) {
                    if (result.status === 0) {
                        DoResult(result);
                    } else {
                        layer.msg('查询出错');
                        console.log(result.msg);
                    }
                    layer.close(load);
                });
            }
        }
        window.GetHistoryChatOverPageBefore = function (valtime) {
            if (valtime === "") return;
            var load = layer.load();
            var strurl = '@Url.Action("GetPersonalChatHistoryOverPage", "Main")';
            if ('@ViewBag.isGroup' === '1') {
                strurl = '@Url.Action("GetGroupChatHistoryOverPage", "Main")';
            }
            $.post(strurl, { fromuid: '@LoginUserService.ssoUserID', touid: "@ViewBag.touid", dt: valtime, addday: -1 }, function (result) {
                if (result.status === 0) {
                    DoResult(result);
                } else {
                    layer.msg('查询出错');
                    console.log(result.msg);
                }
                layer.close(load);
            });
        }

        window.GetHistoryChatOverPageLast = function (valtime) {
            if (valtime === "") return;
            var load = layer.load();
            var strurl = '@Url.Action("GetPersonalChatHistoryOverPage", "Main")';
            if ('@ViewBag.isGroup' === '1') {
                strurl = '@Url.Action("GetGroupChatHistoryOverPage", "Main")';
            }
            $.post(strurl, { fromuid: '@LoginUserService.ssoUserID', touid: "@ViewBag.touid", dt: valtime, addday: 1 }, function (result) {
                if (result.status === 0) {
                    DoResult(result);
                } else {
                    layer.msg('查询出错');
                    console.log(result.msg);
                }
                layer.close(load);
            });
        }

        /*点击加载更多图片、文件*/
        $(document).on('click', '.clickmore', function () {
            //隐藏加载更多
            $(".clickmore").remove();

            if ($("#historychatPanelFile").hasClass('hide')) {
                //查询图片
                if ("@ViewBag.isGroup" === "1") {
                    GetGroupHistoryChatImg(imgPageNo);
                } else {
                    GetPersonalHistoryChatImg(imgPageNo);
                }
            }
            else if ($("#historychatPanelPic").hasClass('hide')) {
                //查询文件
                if ("@ViewBag.isGroup" === "1") {
                    GetGroupHistoryChatFile(filePageNo);
                } else {
                    GetPersonalHistoryChatFile(filePageNo);
                }
            }
        });


        /*查询人与人之间聊天记录的图片*/
        window.GetPersonalHistoryChatImg = function (pageNo) {
            var load = layer.load();
            $.post("@Url.Action("GetImageMessage", "Chat", new {area = ""})", { fromuid: '@LoginUserService.ssoUserID', touid: "@ViewBag.touid", isgroup: false, pageNo: pageNo }, function (result) {
                layer.close(load);
                if (result.Success && result.Content.length > 0) {
                    DoResultImg(result);
                } else {
                    if (pageNo === 1) {
                        var elestr = "<div class=\"nodata-tip isHidden\"><i class=\"iconfont icon-none\"></i><span class=\"text-none\">暂无内容</span></div>";
                        $("#historychatPanelPic").empty();
                        $("#historychatPanelPic").append(elestr);
                    } else {
                        layer.msg("没有更多数据了", {
                            time: 1000
                        });
                    }
                }
            });
        }

        /*查询群组内聊天记录的图片*/
        window.GetGroupHistoryChatImg = function (pageNo) {
            var load = layer.load();
            $.post("@Url.Action("GetImageMessage", "Chat", new {area = ""})", { fromuid: '@LoginUserService.ssoUserID', touid: "@ViewBag.touid", isgroup: true, pageNo: pageNo }, function (result) {
                layer.close(load);
                if (result.Success && result.Content.length > 0) {
                    DoResultImg(result);
                } else {
                    if (pageNo === 1) {
                        var elestr = "<div class=\"nodata-tip isHidden\"><i class=\"iconfont icon-none\"></i><span class=\"text-none\">暂无内容</span></div>";
                        $("#historychatPanelPic").empty();
                        $("#historychatPanelPic").append(elestr);
                    } else {
                        layer.msg("没有更多数据了", {
                            time: 1000
                        });
                    }
                }
            });
        }
        /*查询人与人聊天记录的文件*/
        window.GetPersonalHistoryChatFile = function (pageNo) {
            var load = layer.load();
            $.post("@Url.Action("GetFileMessage", "Chat", new {area = ""})", { fromuid: '@LoginUserService.ssoUserID', touid: "@ViewBag.touid", isgroup: false, pageNo: pageNo }, function (result) {
                layer.close(load);
                if (result.Success && result.Content.length > 0) {
                    DoResultFile(result);
                } else {
                    if (pageNo === 1) {
                        var elestr = "<div class=\"nodata-tip isHidden\"><i class=\"iconfont icon-none\"></i><span class=\"text-none\">暂无内容</span></div>";
                        $("#historychatPanelFile ul").empty();
                        $("#historychatPanelFile").prepend(elestr);
                    } else {
                        layer.msg("没有更多数据了", {
                            time: 1000
                        });
                    }
                }
            });
        }

        /*查询群组内聊天记录的文件*/
        window.GetGroupHistoryChatFile = function (pageNo) {
            var load = layer.load();
            $.post("@Url.Action("GetFileMessage", "Chat", new {area = ""})", { fromuid: '@LoginUserService.ssoUserID', touid: "@ViewBag.touid", isgroup: true, pageNo: pageNo }, function (result) {
                layer.close(load);
                if (result.Success && result.Content.length > 0) {
                    DoResultFile(result);
                } else {
                    if (pageNo === 1) {
                        var elestr = "<div class=\"nodata-tip isHidden\"><i class=\"iconfont icon-none\"></i><span class=\"text-none\">暂无内容</span></div>";
                        $("#historychatPanelFile ul").empty();
                        $("#historychatPanelFile").prepend(elestr);
                    } else {
                        layer.msg("没有更多数据了", {
                            time: 1000
                        });
                    }
                }
            });
        }

        /*点击搜索按钮*/
        window.SearchHistoryChat = function () {
            msgSearch = $("#searchInput").val();
            if ($.trim(msgSearch) === "") {
                return;
            }
            GetHistoryChat(dateTime, 1);
        }

        /*初始化 上一页下一页按钮 是否可用*/
        window.InitNextBtn = function () {
            $("#pageFirst").addClass("disabled");
            $("#pageBefore").addClass("disabled");
            $("#pageNext").addClass("disabled");
            $("#pageLast").addClass("disabled");
            if (pageNumber < pageCount) {
                $("#pageNext").removeClass("disabled");
            }
            if (pageNumber !== 1 && pageCount>1) {
                $("#pageBefore").removeClass("disabled");
            }
            if (hasNextDay) {
                $("#pageNext").removeClass("disabled");
                $("#pageLast").removeClass("disabled");
            }
            if (hasBeforeDay) {
                $("#pageBefore").removeClass("disabled");
                $("#pageFirst").removeClass("disabled");
            }
        }
        /*抽取出来的 公共部分*/
        window.DoResult = function (result) {
            var elestr = "";
            pageCount = result.pageCount;
            pageNumber = result.currentPage;
            hasNextDay = result.hasNextDay;
            hasBeforeDay = result.hasBeforeDay;
            dateTime = result.datetime;
            setData(dateTime);
            if (result.data.length !== 0) {
                for (var i = 0; i < result.data.length; i++) {
                    var item = result.data[i];

                    if (item.MsgType === "4") {
                        /*语音类消息*/
                        elestr += "<div class=\"clp-item\"><p class=\"color-23 font-s12\"><span class=\"uname\">" + item.FromUserTrueName + "</span><span>" + item.CreateDate + "</span></p>" + item.Msg + "</div>";
                    } else if (item.MsgType === "5") {
                        /*地图签到类消息*/
                        elestr += "<div class=\"clp-item\"><p class=\"color-23 font-s12\"><span class=\"uname\">" + item.FromUserTrueName + "</span><span>" + item.CreateDate + "</span></p>" + item.Msg + "</div>";
                    } else{
                        elestr += "<div class=\"clp-item\"><p class=\"color-23 font-s12\"><span class=\"uname\">" + item.FromUserTrueName + "</span><span>" + item.CreateDate + "</span></p><p class=\"msg\">" + item.Msg + "</p><i class=\"iconfont icon-collection user-fav-history\" title=\"收藏\" data-msgid='"+item.ID+"'></i></div>";
                    }
                }
                $("#historychatPanel").empty();
                $("#historychatPanel").append(elestr);
                EmojiParse($("#historychatPanel div .msg"))
                GaodeMapHistory();
                InitNextBtn();
            } else {
                elestr = "<div class=\"nodata-tip isHidden\"><i class=\"iconfont icon-none\"></i><span class=\"text-none\">暂无内容</span></div>";
                $("#historychatPanel").empty();
                $("#historychatPanel").append(elestr);
                pageCount = 0;
                pageNumber = 0;
            }
            InitNextBtn();
        }

        window.DoResultImg = function (result) {
            var elestr = "";
            for (var i = 0; i < result.Content.length; i++) {
                var item = result.Content[i];
                var dayid = item.msgtime.substring(0, 10);//以天为单位groupby
                var tele = $("#historychatPanelPic ul[data-id='" + dayid + "']");
                if (tele.length !== 0) {
                    if (item.msgtype === 1) {
                        elestr = "<li><img class=\"imgA\" src = \"" + item.msg + "\" title=\"" + item.msgtime + " " + item.fromrealname + "\"/></li>";
                    }else if (item.msgtype === 3) {
                        $.each(item.imglist,function (n, value) {
                            elestr  += "<li><img class=\"imgA\" src = \"" + value + "\" title=\"" + item.msgtime + " " + item.fromrealname + "\"/></li>";
                        });
                    }
                    tele.prepend(elestr);
                } else {
                    if (item.msgtype === 1) {
                        elestr = "<li><img class=\"imgA\" src = \"" + item.msg + "\" title=\"" + item.msgtime + " " + item.fromrealname + "\"/></li>";
                    }else if (item.msgtype === 3) {
                        $.each(item.imglist,function (n, value) {
                            elestr  += "<li><img class=\"imgA\" src = \"" + value + "\" title=\"" + item.msgtime + " " + item.fromrealname + "\"/></li>";
                        });
                    }

                    var elestrK = "<p><i class=\"iconfont icon-historyTime mr10 vam\"></i>" + dayid + "</p><ul data-id=\"" + dayid + "\" class=\"clearfix\">"+elestr+"<ul>";
                    $("#historychatPanelPic").prepend(elestrK);
                }
            }
            if (result.Content.length > 0 && result.Total>result.Count) {
                $("#historychatPanelPic").prepend("<p class=\"clickmore\">点击加载更多</p>");
                imgPageNo++;
            }
        }
        //历史记录中的【文件】类型数据
        window.DoResultFile = function (result) {
            var elestr = "";
            for (var i = 0; i < result.Content.length; i++) {
                var item = result.Content[i];
                var ext= GetClassName(item.filename.substring(item.filename.lastIndexOf(".") + 1));
                //elestr = "<li class=\"cl-file-l\" title=\"" + item.filename + " " + item.fromrealname + "\"><a href=\"" + item.msg + "\"><i class=\"layui-icon\"></i><div class=\"cl-file-r\"><p class=\"mb5\">" + item.filename + "</p><p class=\"font-s12 color-9\"><span class=\"mr10\">" + item.msgtime + "</span></p></div></a></li>";
                elestr = "<li class=\"cl-file-l\" title=\"" + item.filename + " " + item.fromrealname + "\"><a href=\"" + item.msg + "\"><svg class=\"icon\" aria-hidden=\"true\"><use xlink:href=\""+ext+"\"></use></svg><div class=\"cl-file-r\"><p class=\"mb5\">" + item.filename + "</p><p class=\"font-s12 color-9\"><span class=\"mr10\">" + item.msgtime + "</span></p></div></a></li>";
                $("#historychatPanelFile ul").prepend(elestr);
            }
            if (result.Content.length > 0 && result.Total>result.Count) {
                $("#historychatPanelFile").prepend("<p class=\"clickmore\">点击加载更多</p>");
                filePageNo++;
            }
        }
        window.GetClassName = function (fileCode) {
            var currentType = "."+fileCode;
            var key = this.calcFileTypeBySuffix(currentType);
            return "#icon-" + key;
        }

        var FILE_SUFFIX_DICT =  {
            "doc": [".doc", ".docx"],
            "img": [".jpg", ".jpeg", ".png", ".tif", ".bmp", ".gif"],
            "ppt": [".ppt", ".pptx"],
            "pdf": [".pdf", ".caj", ".nh", ".kdh", ".tab"],
            "excel": [".xls", ".xlsx"]
        }
        window.calcFileTypeBySuffix = function (suffix) {
            if (suffix == null) {
                suffix = "";
            }
            var dict = FILE_SUFFIX_DICT;
            var isExist = false;
            var hasKey = "";
            $.each(dict, function(index, key) {
                var list = dict[index];
                isExist = list.some(function(item) {
                    return item === suffix.toLowerCase() && (hasKey = index);
                });
                if (isExist) return false;//跳出循环
            });
            return hasKey || "other";
        }


        window.GaodeMapHistory=function() {
            var mapsinhistory = $(".mapi-history");
            $.each(mapsinhistory, function (n, item) {
                var itemid = $(item).attr('id');
                var latitude = $(item).attr('map-data').split(',');
                GaoDeMap(itemid,latitude);
            });

        }






        //导出按钮
        $(".chat-export").click(function(event) {

            GetChatHistory(dateTime+' 00:00:00',dateTime + ' 23:59:59');

         });


         $(".msg-font-style").click(function(event){
             $(this).addClass("hover").siblings().removeClass("hover");
             var index=$(this).index();
             if(index==0){
                 $("#ulChat").removeClass("ul-font-big").removeClass("ul-font-normal").addClass("ul-font-small");
             }else if(index==1){
                 $("#ulChat").removeClass("ul-font-big").removeClass("ul-font-small").addClass("ul-font-normal");
             }else if(index==2){
                 $("#ulChat").removeClass("ul-font-small").removeClass("ul-font-normal").addClass("ul-font-big");
             }
         })
        $(".icon-collection").hover(function(){
            $(this).addClass("icon-collectionS");
        },function(){
            $(this).removeClass("icon-collectionS");
        });



        //右侧历史记录中的收藏click
         $(document).on('click', '.user-fav-history', function () {
            var msgid = $(this).attr("data-msgid");
            $.ajax({
                url:'/imwebapi/api/MainApi/AddUserFavorites',
                type: 'POST',
                headers: {
                    'ignore-identity': "true"
                },
                data:{
                    userId:'@LoginUserService.ssoUserID',
                    type: 1,
                    content: '',
                    cid:msgid,
                },
                dataType:'json',
                success: function (result) {
                    if (result.Success) {
                        layer.msg('收藏成功');
                    } else {
                        layer.msg('收藏失败');
                    }

                },
                error:function(xhr,textStatus){

                }
            })
        });




    });
</script>
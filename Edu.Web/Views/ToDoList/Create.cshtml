@using Edu.Tools
<!DOCTYPE html>
<html lang="en">
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <link href="~/Content/Web/css/Element-UI/index.css" rel="stylesheet" />
    <link href="~/Content/Web/css/iconfont.css" rel="stylesheet" />
    <link href="~/Content/Web/css/style.css" rel="stylesheet" />
    <link href="~/Content/Web/css/todolist_main.css" rel="stylesheet" />
    <link href="~/Content/Web/css/todolist.css" rel="stylesheet" />
</head>
<body>
<div id="app" class="editClass" v-loading="loading" element-loading-text="拼命加载中">
    <!-- 新建任务 -->
    <el-scrollbar class="group-dialog">
        <div class="dialog-con">
            <el-form label-width="100px" v-bind:model="formData" v-bind:rules="rules" ref="form">
                <el-form-item label="任务名称：" prop="Title">
                    <el-input v-model="formData.Title"></el-input>
                </el-form-item>
                <el-form-item label="上级任务：" v-bind:class="{nodisplay:!hasfather}">
                    {{FatherTitle}}
                </el-form-item>
                <el-form-item label="创建人：">
                    <span class="mr20"><img v-bind:src="creator.photo" class="head-simg mr10 vam">{{creator.realname}}</span>
                </el-form-item>
                <el-form-item label="时间：">
                    <el-col :span="11">
                        <el-form-item prop="StartDate">
                            <el-date-picker v-model="formData.StartDate"
                                            style="width: 100%;"
                                            type="datetime"
                                            value-format="yyyy-MM-dd HH:mm:ss"></el-date-picker>
                        </el-form-item>
                    </el-col>
                    <el-col class="line" :span="2"> —— </el-col>
                    <el-col :span="11">
                        <el-form-item prop="EndDate">
                            <el-date-picker type="datetime"
                                            v-model="formData.EndDate"
                                            style="width: 100%;"
                                            value-format="yyyy-MM-dd HH:mm:ss"></el-date-picker>
                        </el-form-item>
                    </el-col>
                </el-form-item>
                <el-form-item label="优先级：">
                    <el-select v-model="formData.Priority" placeholder="请选择任务优先级">
                        <el-option label="一般" v-bind:value="0"></el-option>
                        <el-option label="紧急" v-bind:value="1"></el-option>
                        <el-option label="特急" v-bind:value="2"></el-option>
                    </el-select>
                </el-form-item>
                <el-form-item label="提醒：">
                    <el-select v-model="formData.CallDate" placeholder="请选择提醒时间">
                        <el-option label="不提醒" v-bind:value="0"></el-option>
                        <el-option label="提前5分钟" v-bind:value="1"></el-option>
                        <el-option label="提前10分钟" v-bind:value="2"></el-option>
                        <el-option label="提前15分钟" v-bind:value="3"></el-option>
                        <el-option label="提前30分钟" v-bind:value="4"></el-option>
                        <el-option label="提前1小时" v-bind:value="5"></el-option>
                        <el-option label="提前1天" v-bind:value="6"></el-option>
                    </el-select>
                </el-form-item>
                <el-form-item label="抄送人：" class="check-mem">
                    <i class="iconfont icon-addT" @@click="show(0)"></i>
                    <ul id="member0Ul" class="posr">
                        <span class="mr18 us" v-for="(item, index) in copyToUsers" v-bind:key="index">
                            <span class="posr">
                                <img v-bind:src="item.photo" class="head-simg vam" />
                                <a href="javascript:;" class="del-redT" v-bind:data-id="item.uid">
                                    <i class="iconfont icon-delte  ml10"></i>
                                </a>
                            </span>
                            <span class="dvm">{{item.name}}</span>
                        </span>

                        <i class="iconfont icon-down link03"></i>
                    </ul>
                </el-form-item>
                <el-form-item label="执行人：" required class="check-mem">
                    <i class="iconfont icon-addT" @@click="chooseMember1()"></i>
                    <ul id="member1Ul"></ul>
                </el-form-item>
                <el-form-item label="任务描述：">
                    <el-input type="textarea" v-model="formData.Content"></el-input>
                </el-form-item>
            </el-form>
              
        </div>
    </el-scrollbar>
    <span slot="footer" class="editfoot btn-group">
        <el-button type="primary" @@click="submitForm()">确 定</el-button>
        <el-button @@click="closeForm()">取 消</el-button>
    </span> 
    
    
    
    <check-members ref="members"
                   :props="defaultProps"
                   :empty-text="emptyText"
                   :radio="radio"
                   :expanded="expanded"
                   :title="title"
                   :append-to-body="true"
                   :disabled-list="disabledList"
                   @@confirm="confirm"></check-members>

 
</div>
<script src="~/Content/Web/js/vue.js"></script>
<script src="~/Scripts/check-members.min.js"></script>
<script src="~/Content/Web/js/index.js"></script>
<script src="~/Tookit/calendar/schedule.js"></script>
<script>
    var member0 = "";
    var member1 = "";//执行人id
    var name1 = "";//执行人真实姓名
    var index = parent.layer.getFrameIndex(window.name);
    new Vue({
        el: '#app',
        components: {
            CheckMembers: CheckMembers
        },
        data: function() {
            return {
                emptyText: '暂无数据',
                defaultProps: {
                    realName: 'RealName', // key固定value为传入数据的用户名字段
                    userId: 'id', // key固定value为传入数据的用户id字段
                    pId: 'pid', // key固定value为传入数据的用户父id字段
                    logo: 'icon', // key固定value为传入数据的图标字段
                    department: 'department', // key固定value为传入数据的部门字段
                    type: 'type', // key固定value为传入数据的类型字段
                    userType: 0,
                    // key固定value为用户类型
                },
                title: '选择成员', //弹窗标题
                radio: false, // 是否单选
                expanded: false, // 是否默认展开
                allMember: [],
                members: [], //已经选中的成员 暂时不用
                membertype: 0,//membertype=0表示选择抄送人  membertype=1表示选择执行人

                hasfather:false,
                FatherTitle: '@ViewBag.fathertitle',
                loading: true,
                creator: { photo: '', realname: '' },
                copyToUsers: {},
                formData: {
                    Title: '',
                    Creator: '',
                    StartDate: new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate(),0,0),
                    EndDate: new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate()+1, 0, 0),
                    Priority: 0,
                    CallDate: 0,
                    ManagerPerson: '',
                    ExecutivesPerson: '',
                    Content: '',
                    CreatorTrueName: '',
                    ParentID: '@ViewBag.fatherid',
                    GroupID: '@ViewBag.groupid'
                },
                rules: {
                    Title: [
                        { required: true, message: '请输入任务名称', trigger: 'blur' },
                        { min: 2, max: 20, message: '长度在 2 到 20 个字符', trigger: 'blur' }
                    ],

                }
            };
        },
        computed: {
           disabledList() {
               return [];
           }
        },
        created () {
            this.getInfo();
            var self = this;
            //设置抄送人 有多个人
            window.SetMember0 = function (ids, names) {
                self.loading = true;
                member0 = ids;
                $("#member0Ul").empty();
                var idArray = ids.split(";");
                var nameArray = names.split(";");

                $.each(idArray, function (index, value) {
                    var name = nameArray[index];
                    addMember(value, name, $("#member0Ul"));
                });
                self.loading = false;
                $("#member0Ul").append("<i class=\"iconfont icon-down link03\"></i>");
            }
            //设置执行人 只有一个人
            window.SetMember1 = function (id, name) {
                member1 = id.replace(';', '');
                name1 = name.replace(';', '');
                $("#member1Ul").empty();
                addMember(member1, name1, $("#member1Ul"));
            }
            
            window.addMember = function (id, name, ele) {
                if (id === '') return;
                if (name === '') return;
                var strele = "<span class=\"mr18 us\"><span class=\"posr\"><img src=\"" + '@(ConfigHelper.GetConfigString("sso_host_name") + "pic/")' + id + "\" class=\"head-simg vam\">" + "<a href=\"javascript:;\" class=\"del-redT\" data-id=\"" + id + "\"><i class=\"iconfont icon-delte ml10\"></i></a></span><span class=\"dvm\">" + name + "</span></span>";
                $(ele).append(strele);
            }
        },
        methods: {
            confirm: function (mems) {
                //点击确定后的回调
                //this.members = mems.slice(0);
                //console.log(mems);
                if (this.membertype === 0) {
                    var ids = "";
                    var names = "";
                    $.each(mems, function (index, value) {
                        ids += value.id + ";";
                        names += value.RealName+";";
                    });
                    SetMember0(ids, names);
                }
                if (this.membertype === 1) {
                    /*设置执行人 执行人只能是一个人*/
                    if (mems.length === 0) {
                        return;
                    }
                    if (mems.length === 1) {
                        SetMember1(mems[0].id, mems[0].RealName);
                    } else {
                        this.$message.error('执行人只能是一位成员');
                    }
                }
            },
            show (membertype) {
                //membertype=0表示选择抄送人  membertype=1表示选择执行人
                this.membertype = membertype;
                var list = [{
                    data: this.allMember.slice(0),
                    expanded: true,
                    isTree: true,
                    name: '机构成员'
                }];
                var members = this.members.slice(0);
                this.$refs.members.show({
                    list: list,
                    members: members
                });
            },

            getInfo: function () {
                var self = this;
                if ('@ViewBag.fathertitle' !== '') {
                    this.hasfather = true;
                }
                if ('@ViewBag.ManagerPerson' !== '') {
                    member0='@ViewBag.ManagerPerson';
                    /*执行者*/
                    $.post("/im/ToDoList/GetCopyToUsers", { uids: '@ViewBag.ManagerPerson' }, function(data0) {
                        self.copyToUsers = data0.data;
                    });

                }
                //获取所有成员，为弹窗做准备
                $.post("/im/ToDoList/GetAllMembers", {}, function(data1) {
                    self.allMember = data1.members;
                    self.loading = false;
                });

                //获取创建人的真实姓名和头像
                $.ajax({
                    type: 'POST',
                    url: '/im/ToDoList/GetCreator',
                    data: '',
                    success: function(result) {
                        self.creator.photo = result.photo;
                        self.creator.realname = result.realname;
                        self.formData.CreatorTrueName = result.realname;
                    },
                    dataType: 'json'
                });
            },
            submitForm: function() {
                var self = this;
                if (this.loading) return;

                if (member1 == "") {
                    this.$message.error('执行人不能为空');
                    return;
                }
                this.formData.ManagerPerson = member0;
                this.formData.ExecutivesPerson = member1;
                //判断时间
                if (this.formData.StartDate != "" && this.formData.EndDate != "" && (this.formData.StartDate >= this.formData.EndDate)) {
                    this.$message.error('创建失败，任务的开始时间必须小于结束时间');
                    return;
                }
                this.$refs.form.validate((valid) => {
                    if (valid) {
                        $.ajax({
                            type: 'POST',
                            url: '/im/ToDoList/CreateWork',
                            data: self.formData,
                            success: function(result) {
                                //console.log(result);
                                if (result.r) {
                                    self.$message({
                                        message: '任务创建成功',
                                        type: 'success'
                                    });
                                    self.loading = false;
                                    //刷新index页面
                                    var ele = window.parent.document.getElementById("todolistiframe");
                                    ele.contentWindow.searchwork && ele.contentWindow.searchwork();
                                    //回调我的工作->工作交办页面
                                    ele.contentWindow.searchworkNew && ele.contentWindow.searchworkNew();
                                    //调用首页方法，添加一条动态通知
                                    window.parent.addGroupMessage && window.parent.addGroupMessage("add", self.formData.Title, self.formData.CreatorTrueName, { name: name1, id: member1 });

                                    setTimeout(function() {
                                        parent.layer.close(index);
                                    }, 700);
                                } else {
                                    self.$message.error('请求失败');
                                    console.log(result.m);
                                    self.loading = false;
                                }
                            },
                            dataType: 'json'
                        });
                        this.loading = true;
                    } else {
                        console.log('error submit!!');
                        this.loading = false;
                        return false;
                    }
                });
            },
            closeForm: function() {
                parent.layer.close(index);
            },
            chooseMember0: function() {
                parent.layer.open({
                    type: 2,
                    title: '选择抄送人',
                    shadeClose: false,
                    shade: 0,
                    border: [0],
                    area: ['650px', '600px'],
                    content: '/im/todolist/ChooseMemberNew?type=0',
                });
            },
            chooseMember1: function() {
                if ('@ViewBag.groupid' === '0') {
                    this.show(1);
                } else {
                    parent.layer.open({
                        type: 2,
                        title: '选择执行人',
                        skin: 'okcsclass',
                        shade: 0.3,
                        shadeClose: true,
                        border: [0],
                        area: ['650px', '600px'],
                        content: '/im/todolist/ChooseMember?type=1&groupid=' + '@ViewBag.groupid',
                    });
                }
            },
        }
    });

    //删除抄送人
    $(document).on('click', '#member0Ul .icon-delte', function () {
        var uid = $(this).parent().attr('data-id');
        $(this).parent().parent().parent().remove();
        member0 = member0.replace(uid + ';', '');
        if($("#member0Ul>span").length <= 12) {
            $(".link03").remove();
        }
    });

    //删除执行人
    $(document).on('click', '#member1Ul .icon-delte', function () {
        var uid = $(this).parent().attr('data-id');
        $(this).parent().parent().parent().remove();
        member1 = member1.replace(uid, '');
    });
    //展开收起抄送人
    $(document).on('click', '.link03', function () {
        if ($(".link03").hasClass("icon-down")) {
            $("#member0Ul").addClass("mem-con-max");
            $(".link03").removeClass("icon-down").addClass("icon-up");
        } else {
            $("#member0Ul").removeClass("mem-con-max");
            $(".link03").removeClass("icon-up").addClass("icon-down");
        }
    });


    
</script>
</body>
</html>